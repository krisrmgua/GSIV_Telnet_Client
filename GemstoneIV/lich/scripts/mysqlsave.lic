#!/usr/bin/ruby -w
require 'mysql2'

loop {
Myname = Char.name
#Myname = "Aiss"

client = Mysql2::Client.new(
	:host     => '192.168.0.200',
	:username => 'kris',
	:password => 'kas@072578',
	:database => 'gs',
	:encoding => 'utf8'
	)

###### MIND ######
mind = percentmind()
results_mind = client.query("UPDATE characters SET mind=\"#{mind}\" WHERE name=\"#{Myname}\"")

###### SILVER ######
fput "bank acc"
line = matchtimeout 5, "in the amount of", "Total"
if line =~ /in the amount of (\d+,\d+,\d+|\d+,\d+)/ or line =~ /Total: (\d+,\d+,\d+|\d+,\d+)/
  money = $1
  #money = money.gsub(/[\s,]/ ,"")
  results_money = client.query("UPDATE characters SET silver=\"#{money}\" WHERE name=\"#{Myname}\"")
end

###### ROOM #######
room = {
        'title' => XMLData.room_title,
        'description' => XMLData.room_description,
        'exits' => XMLData.room_exits_string,
        'loot' => GameObj.loot.collect { |loot| loot.name },
}
room['pcs'] = Array.new
GameObj.pcs.each { |pc| room['pcs'].push(hash={'name'=>pc.name, 'status'=>pc.status}) }
unless hidden? or invisible?
        status = Array.new
        status.push 'dead' if dead?
        status.push 'webbed' if webbed?
        status.push 'stunned' if stunned?
        if kneeling?
                status.push 'kneeling'
        elsif sitting?
                status.push 'sitting'
        elsif !standing?
                if GameObj.pcs.any? { |pc| pc.status =~ /prone/ } or GameObj.pcs.any? { |pc| pc.status =~ /prone/ }
                        status.push 'prone'
                else
                        status.push 'lying down'
                end
        end
        if status.empty?
                room['pcs'].push(h={'name'=>Char.name, 'status'=>nil})
        else
                room['pcs'].push(h={'name'=>Char.name, 'status'=>status.join(' ')})
        end
end
room['npcs'] = Array.new
GameObj.npcs.each { |npc| room['npcs'].push(hash={'name'=>npc.name, 'status'=>npc.status}) }
output = ""
also_see = Array.new
room['npcs'].each { |npc| if npc['status'].nil?; also_see.push(npc['name']); else; also_see.push("#{npc['name']} (#{npc['status']})"); end }
also_see = (also_see + room['loot']) unless room['loot'].nil? or room['loot'].empty?
also_here = Array.new
room['pcs'].each { |pc| if pc['status'].nil?; also_here.push(pc['name']); else; also_here.push("#{pc['name']} (#{pc['status']})"); end }
room2 = Map.list.find { |room2| room2.title.include?(room['title']) and room2.desc.include?(room['description'].strip) and room2.paths.include?(room['exits']) }
unless room2
        desc_regex = /#{Regexp.escape(room['description'].strip.sub(/\.+$/, '')).gsub(/\\\.(?:\\\.\\\.)?/, '|')}/
        room2 = Map.list.find { |room2| room2.title.include?(room['title']) and room2.paths.include?(room['exits']) and room2.desc.find { |desc| desc =~ desc_regex } }
end
output.concat "#{room['title']}#{' (' + room2.id.to_s + ')' if room2}\n"
if also_see.empty?
        output.concat "#{room['description']}\n"
else
        output.concat "#{room['description']}  You also see #{also_see.join(', ')}.\n"
end
output.concat "Also here: #{also_here.join(', ')}\n" unless also_here.empty?
output.concat "#{room['exits']}\n"
results_location = client.query("UPDATE characters SET location=\"#{output}\" WHERE name=\"#{Myname}\"")
#respond output

data = {
    'injuries' => XMLData.injuries,
    'health' => XMLData.health,
    'max_health' => XMLData.max_health,
    'spirit' => XMLData.spirit,
    'max_spirit' => XMLData.max_spirit,
    'stamina' => XMLData.stamina,
    'max_stamina' => XMLData.max_stamina,
}

wound_message = {
        'head'      => [ '', 'minor bruises about the head', 'minor lacerations about the head and a possible mild concussion', 'severe head trauma and bleeding from the ears' ],
        'neck'      => [ '', 'minor bruises on your neck', 'moderate bleeding from your neck', 'snapped bones and serious bleeding from the neck' ],
        'chest'     => [ '', 'minor cuts and bruises on your chest', 'deep lacerations across your chest', 'deep gashes and serious bleeding from your chest' ],
        'abdomen'   => [ '', 'minor cuts and bruises on your abdominal area', 'deep lacerations across your abdominal area', 'deep gashes and serious bleeding from your abdominal area' ],
        'back'      => [ '', 'minor cuts and bruises on your back', 'deep lacerations across your back', 'deep gashes and serious bleeding from your back' ],
        'rightEye'  => [ '', 'a bruised right eye', 'a swollen right eye', 'a blinded right eye' ],
        'leftEye'   => [ '', 'a bruised left eye', 'a swollen left eye', 'a blinded left eye' ],
        'rightLeg'  => [ '', 'some minor cuts and bruises on your right leg', 'a fractured and bleeding right leg', 'a completely severed right leg' ],
        'leftLeg'   => [ '', 'some minor cuts and bruises on your left leg', 'a fractured and bleeding left leg', 'a completely severed left leg' ],
        'rightArm'  => [ '', 'some minor cuts and bruises on your right arm', 'a fractured and bleeding right arm', 'a completely severed right arm' ],
        'leftArm'   => [ '', 'some minor cuts and bruises on your left arm', 'a fractured and bleeding left arm', 'a completely severed left arm' ],
        'rightHand' => [ '', 'some minor cuts and bruises on your right hand', 'a fractured and bleeding right hand', 'a completely severed right hand' ],
        'leftHand'  => [ '', 'some minor cuts and bruises on your left hand', 'a fractured and bleeding left hand', 'a completely severed left hand' ],
        'nsys'      => [ '', 'a strange case of muscle twitching', 'a case of sporadic convulsions', 'a case of uncontrollable convulsions' ],
        'rightFoot' => [ '', 'missing message', 'missing message', 'missing message' ],
        'leftFoot'  => [ '', 'missing message', 'missing message', 'missing message' ],
}
scar_message = {
        'head'      => [ '', 'a scar across your face', 'several facial scars', 'old mutilation wounds about your head' ],
        'neck'      => [ '', 'a scar across your neck', 'some old neck wounds', 'terrible scars from some serious neck injury' ],
        'chest'     => [ '', 'an old battle scar across your chest', 'several painful-looking scars across your chest', 'terrible, permanent mutilation of your chest muscles' ],
        'abdomen'   => [ '', 'an old battle scar across your abdominal area', 'several painful-looking scars across your abdominal area', 'terrible, permanent mutilation of your abdominal muscles' ],
        'back'      => [ '', 'an old battle scar across your back', 'several painful-looking scars across your back', 'terrible, permanent mutilation of your back muscles' ],
        'rightEye'  => [ '', 'a black-and-blue right eye', 'severe bruises and swelling around your right eye', 'a missing right eye' ],
        'leftEye'   => [ '', 'a black-and-blue left eye', 'severe bruises and swelling around your left eye', 'a missing left eye' ],
        'rightLeg'  => [ '', 'old battle scars on your right leg', 'a mangled right leg', 'a missing right leg' ],
        'leftLeg'   => [ '', 'old battle scars on your left leg', 'a mangled left leg', 'a missing left leg' ],
        'rightArm'  => [ '', 'old battle scars on your right arm', 'a mangled right arm', 'a missing right arm' ],
        'leftArm'   => [ '', 'old battle scars on your left arm', 'a mangled left arm', 'a missing left arm' ],
        'rightHand' => [ '', 'old battle scars on your right hand', 'a mangled right hand', 'a missing right hand' ],
        'leftHand'  => [ '', 'old battle scars on your left hand', 'a mangled left hand', 'a missing left hand' ],
        'nsys'      => [ '', 'developed slurred speech', 'constant muscle spasms', 'a very difficult time with muscle control' ],
        'rightFoot' => [ '', 'missing message', 'missing message', 'missing message' ],
        'leftFoot'  => [ '', 'missing message', 'missing message', 'missing message' ],
}
output = ""
if data['injuries'].values.any? { |hash| (hash['wound'].to_i > 0) or (hash['scar'].to_i > 0) }
        wound_array = data['injuries'].to_a.collect { |inj| wound_message[inj[0]][inj[1]['wound'].to_i] }.delete_if { |msg| msg.nil? or msg.empty? }
        if wound_array.length == 1
                output.concat "You have #{wound_array.first}.\n"
        elsif wound_array.length > 1
                output.concat "You have #{wound_array[0..-2].join(', ')}, and #{wound_array[-1]}.\n"
        end
        scar_array = data['injuries'].to_a.collect { |inj| scar_message[inj[0]][inj[1]['scar'].to_i] }.delete_if { |msg| msg.nil? or msg.empty? }
        if scar_array.length == 1
                output.concat "You have #{scar_array.first}.\n"
        elsif scar_array.length > 1
                output.concat "You have #{scar_array[0..-2].join(', ')}, and #{scar_array[-1]}.\n"
        end
else
        output.concat "0"
end
injuries = output
health = "#{data['health']}/#{data['max_health']}\n"
spirit = "#{data['spirit']}/#{data['max_spirit']}\n"
results_health = client.query("UPDATE characters SET health=\"#{health}\" WHERE name=\"#{Myname}\"")
results_spirit = client.query("UPDATE characters SET spirit=\"#{spirit}\" WHERE name=\"#{Myname}\"")
results_injuries = client.query("UPDATE characters SET injuries=\"#{injuries}\" WHERE name=\"#{Myname}\"")

###### DEAD #######
dead = checkdead
results_dead = client.query("UPDATE characters SET dead=\"#{dead}\" WHERE name=\"#{Myname}\"")


##### GET LEVEL #####
dinfo = LNet.get_data(Myname, 'info')
dlevel = dinfo["Level"]
dlevel = dlevel.to_i
results_level = client.query("UPDATE characters SET level=\"#{dlevel}\" WHERE name=\"#{Myname}\"")


###### GET EXP LEFT #######
level = Hash.new
level['1'] = "2500"
level['2'] = "2500"
level['3'] = "5000"
level['4'] = "7500"
level['5'] = "10000"
level['6'] = "12500"
level['7'] = "15000"
level['8'] = "17500"
level['9'] = "20000"
level['10'] = "22500"
level['11'] = "25000"
level['12'] = "27500"
level['13'] = "30000"
level['14'] = "32500"
level['15'] = "35000"
level['16'] = "37000"
level['17'] = "39000"
level['18'] = "41000"
level['19'] = "43000"
level['20'] = "45000"
level['21'] = "47000"
level['22'] = "49000"
level['23'] = "51000"
level['24'] = "53000"
level['25'] = "55000"
level['26'] = "56500"
level['27'] = "58000"
level['28'] = "59500"
level['29'] = "61000"
level['30'] = "62500"
level['31'] = "64000"
level['32'] = "65500"
level['33'] = "67000"
level['34'] = "68500"
level['35'] = "70000"
level['36'] = "71500"
level['37'] = "73000"
level['38'] = "74500"
level['39'] = "76000"
level['40'] = "77500"
level['41'] = "78500"
level['42'] = "79500"
level['43'] = "80500"
level['44'] = "81500"
level['45'] = "82500"
level['46'] = "83500"
level['47'] = "84500"
level['48'] = "85500"
level['49'] = "86500"
level['50'] = "87500"
level['51'] = "88000"
level['52'] = "88500"
level['53'] = "89000"
level['54'] = "89500"
level['55'] = "90000"
level['56'] = "90500"
level['57'] = "91000"
level['58'] = "91500"
level['59'] = "92000"
level['60'] = "92500"
level['61'] = "93000"
level['62'] = "93500"
level['63'] = "94000"
level['64'] = "94500"
level['65'] = "95000"
level['66'] = "95500"
level['67'] = "96000"
level['68'] = "96500"
level['69'] = "97000"
level['70'] = "97500"
level['71'] = "98000"
level['72'] = "98500"
level['73'] = "99000"
level['74'] = "99500"
level['75'] = "100000"
level['76'] = "100500"
level['77'] = "101000"
level['78'] = "101500"
level['79'] = "102000"
level['80'] = "102500"
level['81'] = "103000"
level['82'] = "103500"
level['83'] = "104000"
level['84'] = "104500"
level['85'] = "105000"
level['86'] = "105500"
level['87'] = "106000"
level['88'] = "106500"
level['89'] = "107000"
level['90'] = "107500"
level['91'] = "108000"
level['92'] = "108500"
level['93'] = "109000"
level['94'] = "109500"
level['95'] = "110000"
level['96'] = "110500"
level['97'] = "111000"
level['98'] = "111500"
level['99'] = "112000"
level['100'] = "112500"
mylevel = XMLData.level
xpnNLT = XMLData.next_level_text
if xpnNLT =~ /( experience| until next level)/
    xpnCur = xpnNLT.delete(' experience').delete(' until next level').to_i
end
next_level = mylevel + 1
exp_needed = level["#{next_level}"]
mypercent = Integer(((xpnCur) / exp_needed.to_f) * 100)
mypercent = 100 - mypercent
results_exp = client.query("UPDATE characters SET exp=\"#{mypercent}\" WHERE name=\"#{Myname}\"")


### SAVE LOCATION ####
roomnum = Room.current.id.to_s
results_exp = client.query("UPDATE characters SET roomnum=\"#{roomnum}\" WHERE name=\"#{Myname}\"")

## UPDATEDATED MYSQLFIELD
updated = Time.now.strftime('%Y-%m-%d %H:%M:%S')
results_exp = client.query("UPDATE characters SET updated=\"#{updated}\" WHERE name=\"#{Myname}\"")

client&.close
if script.vars[1]
    break
end
sleep 30;
}
